apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "efk-stack.fullname" . }}-forwarder-cm
  labels: {{- include "efk-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: forwarder
data:
  fluentd.conf: |
    {{- if .Values.fluentd.metrics.enabled -}}
    # Prometheus Exporter Plugin
    # input plugin that exports metrics
    <source>
      @type prometheus
      port {{ .Values.fluentd.metrics.service.port }}
    </source>

    # input plugin that collects metrics from MonitorAgent
    <source>
      @type prometheus_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>

    # input plugin that collects metrics for output plugin
    <source>
      @type prometheus_output_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>

    # input plugin that collects metrics for in_tail plugin
    <source>
      @type prometheus_tail_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>
    {{- end }}

    # Ignore fluentd own events
    <match fluent.**>
      @type null
    </match>

    # HTTP input for the liveness and readiness probes
    <source>
      @type http
      port 9880
    </source>

    # Throw the healthcheck to the standard output instead of forwarding it
    <match fluentd.healthcheck>
      @type stdout
    </match>

    # Get the logs from the containers running in the node
    <source>
      @type tail
      path /var/log/containers/*.log
      # exclude Fluentd logs
      exclude_path /var/log/containers/*fluentd*.log
      pos_file /opt/bitnami/fluentd/logs/buffers/fluentd-docker.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    # enrich with kubernetes metadata
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <filter kubernetes.var.log.containers.**>
      @type parser
      <parse>
        @type json
        json_parser json
      </parse>
      replace_invalid_sequence true
      emit_invalid_record_to_error false
      key_name log
      reserve_data true
    </filter>
    {{ if .Values.fluentd.aggregator.enabled }}
    # Forward all logs to the aggregators
    <match **>
      @type forward
    {{- $fullName := print (include "efk-stack.fullname" .) "-fluentd" }}
    {{- $global := . }}
    {{- $domain := default "cluster.local" .Values.fluentd.clusterDomain }}
    {{- $port := .Values.fluentd.aggregator.port | int }}
    {{- range $i, $e := until (.Values.fluentd.aggregator.replicaCount | int) }}
      <server>
    {{ printf "host %s-%d.%s-headless.%s.svc.%s" $fullName $i $fullName $global.Release.Namespace $domain }}
    {{ printf "port %d" $port }}
    {{- if ne $i 0 }}
        standby
    {{- end }}
      </server>
    {{- end}}

      <buffer>
        @type file
        path /opt/bitnami/fluentd/logs/buffers/logs.buffer
        flush_thread_count 2
        flush_interval 5s
      </buffer>
    </match>
    {{- else }}
    # Send the logs to the standard output
    <match **>
      @type stdout
    </match>
    {{- end -}}
